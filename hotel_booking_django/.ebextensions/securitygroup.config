Resources:
  EBSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable inbound traffic on ports 80 and 443, and outbound traffic to all ports
      VpcId: vpc-04043e85e8baa3e1e

  InboundHTTPSecurityGroupRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["EBSSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
      FromPort: 80
      ToPort: 80

  InboundHTTPSSecurityGroupRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["EBSSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
      FromPort: 443
      ToPort: 443

  OutboundSecurityGroupRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: {"Fn::GetAtt" : ["EBSSecurityGroup", "GroupId"]}
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
      FromPort: 0
      ToPort: 65535

option_settings:
  aws:elbv2:listener:80:
    ListenerEnabled: true
  aws:elbv2:listener:443:
    ListenerEnabled: true

  aws:elasticbeanstalk:application:environment:
    SECURITY_GROUP_ID: {"Fn::GetAtt" : ["EBSSecurityGroup", "GroupId"]}
  aws:elbv2:loadbalancer:
    SecurityGroups: sg-0b0ee31f07f1e7611
  aws:autoscaling:launchconfiguration:
    SecurityGroups: sg-0b0ee31f07f1e7611