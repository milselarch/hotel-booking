# Generated by Django 4.0.5 on 2022-07-16 16:09

from django.db import migrations, models
import django_cryptography.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user_account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True))),
                ('last_name', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True))),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('phone', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=15, null=True))),
                ('title', models.CharField(blank=True, choices=[('MR', 'Mr.'), ('MS', 'Ms.'), ('MRS', 'Mrs.')], max_length=3, null=True)),
                ('phone_country', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
