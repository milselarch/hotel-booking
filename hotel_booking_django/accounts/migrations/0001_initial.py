# Generated by Django 4.0.5 on 2022-06-21 08:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='user_account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.UUID('cc9a9709-d561-4b5c-8a3b-c1fd46052404'), editable=False, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('phone', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(10000000), django.core.validators.MaxValueValidator(999999999999999)])),
                ('title', models.CharField(blank=True, choices=[('MR', 'Mr.'), ('MS', 'Ms.'), ('MRS', 'Mrs.')], max_length=3, null=True)),
                ('display_currency_preference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.country_currency')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('phone_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.country_code')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
